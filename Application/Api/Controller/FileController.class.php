<?php
/**
 * Created by mumu.
 * Date: 2016/12/7
 * Time: 10:40
 */
namespace Api\Controller;
class FileController extends BaseController
{
    protected $res;
    protected $path;
    public function _initalize()
    {
        parent::_initalize(); // TODO: Change the autogenerated stub
        $this->res = [];
    }

    public function upFile($file=null, $path='', $ext=[], $size=[]){
        $size = $size?$size:$_POST['thumbsize'];
        if($size && !is_array($size)){
            $size = [
                ['width'=>100, 'height'=>100],
                ['width'=>300, 'height'=>300],
                ['width'=>960, 'height'=>960],
            ];
        }
        $file = $file?$file:$_FILES;
        $this->path = $_POST['path']?$_POST['path']:$path;
        $path = rtrim($this->path, '/').'/';
        $rootPath = $ext['rootPath']?$ext['rootPath']:__ROOT__.'./Public/';
        $upload = new \Think\Upload();// 实例化上传类
        $upload->maxSize   =     3145728 ;// 设置附件上传大小
        $upload->exts      =     array('jpg', 'gif', 'png', 'jpeg');// 设置附件上传类型
        $upload->rootPath  =     $rootPath; // 设置附件上传根目录
        $upload->savePath  =     'Upload/'.$path; // 设置附件上传（子）目录
        $upload->autoSub   =     false;
        $upload->saveName   =     array('uniqid','');
        // 上传文件
        $info   =   $upload->upload($file);
        if(!$info) {// 上传错误提示错误信息
//            if(IS_AJAX){
                $this->ajaxReturn(toJson($upload->getError()));
//            }
            return $upload->getError();
        }else{// 上传成功
            foreach($info as $k=>$v) {
                if($size){
                    $this->thumbPic($rootPath . $v['savepath'] ,$v['savename'], $size);
                }
                $this->res[]['src'] = trim($rootPath . $v['savepath'] . $v['savename'],'.');
            }
        }
//        if(IS_AJAX){
            $this->ajaxReturn(toJson(true, $this->res));
//        }
        return $this->res;
    }

    public function thumbPic($dir, $filename, $size){
        $image = new \Think\Image();
        $image->open($dir.$filename);
        $key = array('l_', 'm_', 's_', 'a_');
        if(!$size){
            $size[0] = ['width'=>100, 'height'=> 100];
        }
        usort($size, function($a,$b){
            $al = $a['width'];
            $bl = $b['width'];
            if($al == $bl) return 0;
            return $al >$bl ? -1 : 1;
        });/*按从大到小排序*/
        foreach($size as $k=>$v){
            $ext = $key[$k]?$key[$k]:str_repeat('_',$k);
            $image->thumb($v['width'],$v['height'])->save($dir.$ext.$filename);
        }

    }

    public function test(){
        $this->error('错误了');
        $list = M('goods')->field('pic')->select();
        $size = [
            ['width'=>100, 'height'=>100],
            ['width'=>300, 'height'=>300],
            ['width'=>960, 'height'=>960],
        ];
        echo count($list);
        foreach ($list as $k=>$v){
            $i = strripos($v['pic'],"/");
            $pic =  substr($v['pic'], $i+1);
            $this->thumbPic('./Public/Upload/Goods/' ,$pic, $size);
        }
        echo $k;
    }
}